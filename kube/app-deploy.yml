apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-django-tmp
  labels:
    app.kubernetes.io/name: app-django-tmp
    app.kubernetes.io/component: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: app-django-tmp
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-django-tmp # Service will look for those PODS labels
        app.kubernetes.io/component: web
    spec:
      containers:
        - name: django-temp
          image: vasili10k/django-temp
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: POSTGRES_PASSWORD     # Env name in container
              valueFrom:
                secretKeyRef:
                  name: pg-secret         # Secret name
                  key: POSTGRES_PASSWORD  # Env name from secret file
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: pg-secret
                  key: POSTGRES_USER
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: pg-secret
                  key: POSTGRES_DB
            - name: DEBUG
              valueFrom:
                configMapKeyRef:          # Get Env value from ConfigMap
                  name: app-config        # ConfigMap name
                  key: debug
            - name: SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: secret_key
            - name: DATABASE_URL
              value: "postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@pg:5432/$(POSTGRES_DB)"

        - name: nginx-for-django-temp
          image: nginx
          ports:
            - containerPort: 8080
              name: http-nginx
          volumeMounts:
            - mountPath: /etc/nginx # mount nginx-conf volume to /etc/nginx
              readOnly: true
              name: nginx-conf     # from 'volumes' 'nginx-conf' name
            - name: static
              mountPath: /usr/share/nginx/static # also defined in root from nginx config
      volumes:
        - name: static            # volume that is first created when a Pod is assigned to a node
          emptyDir: { }
        - name: nginx-conf
          configMap:
            name: nginx-conf      # place ConfigMap `nginx-conf` on /etc/nginx

      # on container startup, move the collected staticfiles
      initContainers:
        - name: move-static-for-app
          image: vasili10k/django-temp
          volumeMounts:
            - name: static
              mountPath: /usr/src/app/static    # path to static folder in project
          command: [ python, manage.py, collectstatic, --noinput ]
